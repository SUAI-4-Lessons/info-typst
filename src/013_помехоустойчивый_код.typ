#import "@preview/gentle-clues:1.1.0": *


= Помехоустойчивый код

#figure(image("images/13_модель_канала_передачи.png", width: 70%))


При передачи сообщения от источника к получателю в канале связи могут возникнуть ошибки. 

И что тогда сделать чтобы их избежать?

Варианты решения:

1. #strike[Плакать]
2. Отправлять дополнительную информацию в сообщении для проверки на стороне получателя

== Помехоустойчивость код с проверкой на чётность <24>

Это одна из самых простых проверок, основной смысл которой рассчитать чётное ли количество единиц в сообщении или нет.

Для этого использовали $xor$ на каждый бит сообщения $D_i$:

$
  P = D_1 xor D_2 xor D_3 ... xor D_n
$

В итоге добавляем этот бит к исходному сообщению и на стороне клиента проверяем сохранила ли чётность наше сообщение.

#example[
  Исходное сообщение: 101011
  
  Рассчитаем бит чётности: $ P = 1 xor 0 xor 1 xor 0 xor 1 xor 1 = 0 $

  Закодированное сообщение: 101011 0

  Полученное сообщение: 101001 0

  Рассчитаем бит чётности: $ P = 1 xor 0 xor 1 xor 0 xor 0 xor 1 = 1 $

  Значит в ходе передачи сообщения была помеха, но где ошибка и как её исправить не понятно.
]

#table(
  columns: 2,
  table.header([➕ Плюсы], [➖ Минусы]),
  [Простота реализации], [Невозможность понять положение ошибки $=>$ невозможно исправить],
  [Минимальная избыточность (к сообщению добавляем всего 1 бит)], [При изменении чётного количества байт невозможно найти ошибку],
)


== Код Хэмминга <22>

Использует Систематический код


/ Систематический код: -- такой код, в котором можно явно выделить
информационные и проверочные разряды.

#image("images/14_код_хэмминга.png")

== Расстояние Хэмминга

/ Расстояние Хэмминга: --- число позиций, в которых соответствующие
символы двух слов одинаковой длины различны.

Два слова расстояние Хэмминга между которыми равно 1, называют
соседними.

=== Кодовое расстояние 

Минимальное расстояние помехоустойчивого кода $d_min$ это наименьшее
расстояние Хэмминга для всех разрешённых кодовых комбинаций.

== Корректирующая способность <23>

/ Корректирующая способность: --- кратность ошибок, которые помехоустойчивый код может:
  1. Только обнаружить без возможности исправления - $r$, $d_min >= r + 1$
  
  2. Только исправить без возможности обнаружения ошибок большей
   кратности - $S$, $d_min >= 2S + 1$
   
  3. Исправить S ошибок и обнаружитть r ошибок, $r > s$; $d_min >= S + r + 1$

